import React from 'react';
import Navbar from "./Components/nav";
import DownFooter from './Components/Downfooter';
import Upfooter from './Components/Upfooter';

import Form from 'react-validation/build/form';
import Input from 'react-validation/build/input';
import axios from "axios";
import {isEmail} from "validator";
import getConfig from "next/config";
import CustomNotifier, {openCustomNotifierSnackbar} from "./Components/CustomNotifier";
import card from "./Components/styles/settingCard.css";
import Link from "next/link";
import {FontAwesomeIcon} from "@fortawesome/react-fontawesome";
import {faAngleRight} from "@fortawesome/free-solid-svg-icons";
const config = getConfig();

// validation disable function

function validate(AaccountAmount,AaccountDescription,AaccountIncomeCost) {

    return {
        AaccountAmount: AaccountAmount.length === 0,
        AaccountDescription: AaccountDescription.length === 0,
        AaccountIncomeCost: AaccountIncomeCost.length === 0,

    };
}



class Account extends React.Component {

    constructor(props) {
        super(props);
        this.state = {
            apiUrl:config.publicRuntimeConfig.publicRuntimeConfigValue.apiUrl,
            AaccountAmount :"",
            AaccountDescription :"",
            AaccountIncomeCost :"",
        };

        this.handleAaccountAmount = this.handleAaccountAmount.bind(this);
        this.handleAaccountDescription = this.handleAaccountDescription.bind(this);
        this.handleAaccountIncomeCost = this.handleAaccountIncomeCost.bind(this);

    }
    handleAaccountAmount(event) {  this.setState({ AaccountAmount: event.target.value });    }
    handleAaccountDescription(event) {  this.setState({ AaccountDescription: event.target.value });    }
    handleAaccountIncomeCost(event) {  this.setState({ AaccountIncomeCost: event.target.value });    }

    // reset form

    resetAccountForm= () => {
        console.log('resetAccountForm calling ...');
        this.setState({ AaccountAmount: "",  AaccountDescription:"",  AaccountIncomeCost:"", });
    };


    // save form

    saveAccount = () => {
        console.log('saveAccount ...', this.state);

        axios.post( this.state.apiUrl+'/api/v1/account/save', {
            'amount':this.state.AaccountAmount,
            'description':this.state.AaccountDescription,
            'income_cost':this.state.AaccountIncomeCost,


        },  {}  )
            .then((response) => {
                console.log("response",response);
                if (response.data.status === "success") {
                    openCustomNotifierSnackbar({ message: response.data.message, duration:90000, notifyType: 'success' });
                    this.resetAccountForm();



                }
                if (response.data.status === "failed") {
                    openCustomNotifierSnackbar({ message: response.data.message, duration:3000, notifyType: 'error' });
                }
            }).catch((error)=>{  console.log("error",error);   });
    };

    canBeSubmitted() {
        const errors = validate(this.state.AaccountAmount, this.state.AaccountDescription, this.state.AaccountDescription);
        const isDisabled = Object.keys(errors).some(x => errors[x]);
        return !isDisabled;
    }
    render () {

        const errors = validate(this.state.AaccountAmount, this.state.AaccountDescription, this.state.AaccountDescription);
        const isDisabled = Object.keys(errors).some(x => errors[x]);

        return(
            <div>

                <CustomNotifier />

                <p style={{textAlign:'center', marginTop:'30px'}}>
                    <Link prefetch href="/accountList">
                        <a href="#" className="jhs"  style={{ fontSize: "12px",textDecoration: "none", color: "#EF5350"}}>
                            Account List
                        </a>
                    </Link>

                    <FontAwesomeIcon icon={faAngleRight}   style={{ color: "#8a8888",  marginRight: "7px",marginLeft: "7px",  paddingTop: "2px"}}/>


                </p>
                <div className="contentDiv">
                    <div className="formDiv">
                        <h1>Basic Accounting Page</h1>

                        <Form>
                            <p>Amount*</p>
                            <input maxLength="30" onChange={this.handleAaccountAmount} value={this.state.AaccountAmount}
                                   type="number" placeholder="Enter your amount"/>

                            <p>Description*</p>
                            <textarea style={{width:'460px', height:'123px', borderRadius:'5px', padding:'7px 10px'}}
                                      onChange={this.handleAaccountDescription} value={this.state.AaccountDescription}
                                   type="text" placeholder="Enter Description here"/>

                            <p>Income/Cost*</p>
                            <Input  onChange={this.handleAaccountIncomeCost} value={this.state.AaccountIncomeCost}
                                   type="number" placeholder=" Enter Income/Cost here "
                                   style={{width:'100%', height:'35px', border:'1px solid #9D9D9D', borderRadius:'5px', paddingLeft:'10px'
                                       ,marginBottom:'8px'}} />



                            <div style={{textAlign:'center', marginTop:'35px', marginBottom:'22px'}} className={card.disable}>
                                <button disabled={isDisabled} type="button" fullwidth="true" variant="contained"
                                        onClick={() => this.saveAccount()} style={{padding: '9px 0px'}}>Submit</button>

                                <p style={{ marginBottom:'66px',fontSize:'13px',color:'rgba(0, 0, 0, 0.54)', marginLeft:'6px'}}>
                                    All fields marked with an asterisk (*) are mandatory.</p>
                            </div>
                        </Form>
                    </div>
                </div>

                <style jsx>
                    {`
                    .contentDiv {
                       
                        padding: 30px 0px;
                    }

                    .formDiv {
                        background-color: white;
                        width: 550px;
                        margin: auto;
                        text-align: left;
                        padding: 25px 45px;
                        border-radius: 7px;
                       
                    }

                    h1 {
                        color: #ef5350;
                        margin-bottom: 35px;
                        font-weight: 300;
                        font-size: 27px;
                        font-family: "Roboto", "Helvetica", "Arial", "sans-serif";
                    }

                    p {
                        color: #9D9D9D;
                        font-size: 20px;
                        margin-bottom: 10px;
                        margin-top: 15px;
                        font-family: "Roboto", "Helvetica", "Arial", "sans-serif";
                    }

                    input {
                        width: 100%;
                        margin-bottom: 8px;
                        border: 1px solid #9D9D9D;
                        border-radius: 5px;
                        height: 35px;
                        padding: 0px 10px;
                        font-family: "Roboto", "Helvetica", "Arial", "sans-serif";
                    }

                    .buttonDiv {
                        text-align: center;
                        margin-top: 23px;
                        margin-bottom: 35px;
                    }

                    button {
                        margin: auto;
                        background-color: #ef5350;
                        color: white;
                        border-radius: 5px;
                        outline: 0px;
                        border: 0px;
                        padding: 12px 60px;
                        font-size: 20px;
                        font-family: "Roboto", "Helvetica", "Arial", "sans-serif";
                    }

                    input:focus {
                        outline: 0px;
                    }

                    button:hover {
                        cursor: pointer;
                        background-color: #DC2723;
                    }

                    @media screen and (max-width: 600px) {
                        .contentDiv {
                            padding: 45px 30px;
                        }

                        .formDiv {
                            width: 100%;
                        }

                        button {
                            width: 100%;
                            padding: 8px 60px;
                        }
                    }

                    @media screen and (max-width: 430px) {
                        .contentDiv {
                            padding: 45px 20px;
                        }

                        .formDiv {
                            width: 100%;
                            padding: 25px 25px;
                        }
                    }

                    @media screen and (max-width: 330px) {
                        p {
                            font-size: 17px;
                        }

                        h1 {
                            font-size: 23px;
                        }
                    }
              `}
                </style>
            </div>
        );
    }
}

export default Account;